cluster:
  mkdir -p logs/slurm/{rule} &&
  sbatch
    --partition={resources.partition}
    --qos={resources.qos}
    --mem={resources.mem_mb}
    --time={resources.time}
    --cpus-per-task={threads}
    --job-name=PyPSAEUR-{rule}-{wildcards}
    --output=logs/snakemake/{rule}/{rule}-{wildcards}-%j.out
    --parsable
set-resources:
  retrieve_databundle:
    partition: "io"
    qos: "io"
  retrieve_cutout:
    partition: "io"
    qos: "io"
  retrieve_cost_data:
    partition: "io"
    qos: "io"
  retrieve_natura_raster:
    partition: "io"
    qos: "io"
  retrieve_electricity_demand:
    partition: "io"
    qos: "io"
  retrieve_ship_raster:
    partition: "io"
    qos: "io"
  build_powerplants:
    partition: "io"
    qos: "io"
  build_renewable_profiles:
    time: "00:60:00"

default-resources:
  - partition=priority
  - qos=priority
  - nodes=1
  - mem_mib=500
  - time="00:10:00"

# Allow canceling of snakemake-submitted slurm jobs using Ctrl+c in combination with sbatch --parsable
cluster-cancel: scancel
jobs: 500
keep-going: True
latency-wait: 60
local-cores: 1
max-jobs-per-second: 10
max-status-checks-per-second: 1
printshellcmds: True
reason: True
rerun-incomplete: True
# Other rerun-triggers can lead to rules trying to access the internet (for retrieve_*) functions
# which leads to errors due to lack of internet access from non-"io" partitions
rerun-trigger:
  - mtime
  - params
restart-times: 3
scheduler: greedy
verbose: True